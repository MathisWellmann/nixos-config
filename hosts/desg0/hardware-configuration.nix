# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: let
  static_ips = import ../../modules/static_ips.nix;
  # main_nic = "enp133s0f0";
  main_nic = "eno1";
in {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "uas" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/7253ee2e-adbd-444e-8662-9780d6419ec8";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F48F-037A";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  swapDevices = [];

  networking = {
    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    useDHCP = lib.mkDefault false;

    networkmanager.enable = false;

    defaultGateway = {
      interface = main_nic;
      address = "192.168.0.55";
    };
    nameservers = [
      "192.168.0.55"
      "1.1.1.1"
      "8.8.8.8"
      "9.9.9.9"
    ];

    interfaces = {
      "${main_nic}" = {
        name = "${main_nic}";
        useDHCP = false;
        mtu = 9000;
        ipv4 = {
          addresses = [
            {
              address = static_ips.desg0_ip;
              prefixLength = 24;
            }
          ];
        };
      };
    };
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
