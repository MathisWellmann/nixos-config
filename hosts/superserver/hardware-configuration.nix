# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ef448e38-ff9d-4e27-8109-c1bfcda544ca";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/DDAD-03D2";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  networking.interfaces.enp6s0 = {
    name = "mellanox-40G-0";
    macAddress = "98:03:9b:d4:a0:e0";
    useDHCP = false;
    mtu = 9000;
    ipv4 = {
      addresses = [
        {
          address = "169.254.2.1";
          prefixLength = 16;
        }
      ];
    };
  };
  networking.interfaces.enp6s0d1 = {
    name = "mellanox-40G-1";
    macAddress = "98:03:9b:d4:a0:e1";
    useDHCP = false;
    mtu = 9000;
    ipv4 = {
      addresses = [
        {
          address = "169.254.2.2";
          prefixLength = 16;
        }
      ];
    };
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
